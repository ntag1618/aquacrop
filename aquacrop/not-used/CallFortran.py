#!/usr/bin/env python
# -*- coding: utf-8 -*-

import numpy as np
import logging
logger = logging.getLogger(__name__)

import warnings

from .io.CarbonDioxide import refconc

import aquacrop_fc


class CallFortran(object):
    def __init__(self, model):
        self.model = model

    def initial(self):
        pass

    def dynamic(self):

        layer_ix = self.model.layerIndex + 1
        EvapTimeSteps = 20
        mature = np.int32(self.model.CropMature).copy()
        
        aquacrop_fc.aquacrop_w.update_aquacrop_w(
            self.model.GDD.T, 
            self.model.GDDcum.T, 
            self.model.GDDmethod, 
            self.model.model.tmax.values, 
            self.model.model.tmin.values,
            self.model.Tbase.T,
            self.model.Tupp.T,
            np.int32(self.model.GrowthStage).T,
            self.model.Canopy10Pct.T,
            self.model.MaxCanopy.T,
            self.model.Senescence.T,
            np.int32(self.model.DAP).T,
            self.model.DelayedCDs.T,
            self.model.DelayedGDDs.T,
            self.model.th.T,
            self.model.th_fc_adj.T,
            np.int32(self.model.WTinSoil).T,
            self.model.th_sat.T,
            self.model.th_fc.T,
            int(self.model.groundwater.WaterTable),
            int(self.model.groundwater.DynamicWaterTable),
            self.model.groundwater.zGW,
            self.model.dz,
            layer_ix,
            self.model.PreIrr.T,
            self.model.IrrMethod.T,
            self.model.Zroot.T,
            self.model.Zmin.T,
            self.model.NetIrrSMT.T,
            self.model.th_wilt.T,
            self.model.dz_sum,
            self.model.DeepPerc.T,
            self.model.FluxOut.T,
            self.model.k_sat.T,
            self.model.tau.T,
            self.model.Runoff.T,
            self.model.Infl.T,
            self.model.model.prec.values,
            np.int32(self.model.DaySubmerged).T,
            np.int32(self.model.Bunds).T,
            self.model.zBund.T,
            np.int32(self.model.CN).T,
            np.int32(self.model.adjustCurveNumber),
            self.model.zCN.T,
            self.model.CNbot.T,
            self.model.CNtop.T,
            self.model.thRZ_Act.T, 
            self.model.thRZ_Sat.T, 
            self.model.thRZ_Fc.T, 
            self.model.thRZ_Wp.T, 
            self.model.thRZ_Dry.T, 
            self.model.thRZ_Aer.T, 
            self.model.TAW.T, 
            self.model.Dr.T, 
            self.model.th_dry.T, 
            self.model.Aer.T,
            self.model.Irr.T,      
            self.model.IrrCum.T,   
            self.model.IrrNetCum.T,
            self.model.SMT1.T,
            self.model.SMT2.T,
            self.model.SMT3.T,
            self.model.SMT4.T,
            self.model.IrrScheduled.T,  # TODO
            self.model.AppEff.T,
            self.model.model.etref.values,
            self.model.MaxIrr.T,
            self.model.IrrInterval.T,            
            self.model.SurfaceStorage.T,
            self.model.CrTot.T,
            self.model.aCR.T,
            self.model.bCR.T,
            self.model.fshape_cr.T,
            self.model.dz_layer,
            self.model.Germination.T,
            self.model.zGerm.T,
            self.model.GermThr.T,
            self.model.rCor.T, 
            self.model.Zmax.T, 
            self.model.PctZmin.T, 
            self.model.Emergence.T, 
            self.model.MaxRooting.T, 
            self.model.fshape_r.T, 
            self.model.fshape_ex.T, 
            self.model.SxBot.T,
            self.model.SxTop.T,
            self.model.TrRatio.T,
            self.model.zRes.T,
            self.model.CC.T,
            self.model.CCprev.T,
            self.model.CCadj.T,
            self.model.CC_NS.T,
            self.model.CCadj_NS.T,
            self.model.CCxW.T,
            self.model.CCxAct.T,
            self.model.CCxW_NS.T,
            self.model.CCxAct_NS.T,
            self.model.CC0adj.T,
            self.model.CCxEarlySen.T,
            self.model.tEarlySen.T,
            np.int32(self.model.PrematSenes).T,  # not required when all modules use Fortran
            self.model.CropDead.T,
            self.model.CC0.T,
            self.model.CCx.T,
            self.model.CGC.T,
            self.model.CDC.T,
            self.model.Maturity.T,
            self.model.CanopyDevEnd.T,
            self.model.ETadj.T,
            self.model.p_up1.T,
            self.model.p_up2.T,
            self.model.p_up3.T,
            self.model.p_up4.T,
            self.model.p_lo1.T,
            self.model.p_lo2.T,
            self.model.p_lo3.T,
            self.model.p_lo4.T,
            self.model.fshape_w1.T,
            self.model.fshape_w2.T,
            self.model.fshape_w3.T,
            self.model.fshape_w4.T,
            self.model.EsAct.T,
            self.model.Epot.T,
            self.model.WetSurf.T,
            self.model.Wsurf.T,
            self.model.Wstage2.T,
            self.model.EvapZ.T,
            self.model.EvapZmin.T,
            self.model.EvapZmax.T,
            self.model.REW.T,
            self.model.Kex.T,
            self.model.fwcc.T,
            self.model.fevap.T,
            self.model.fWrelExp.T,
            np.int32(self.model.Mulches).T,
            self.model.fMulch.T,
            self.model.MulchPctGS.T,
            self.model.MulchPctOS.T,
            self.model.model.time.timestep,
            EvapTimeSteps,
            self.model.TrPot0.T, 
            self.model.TrPot_NS.T, 
            self.model.TrAct.T,
            self.model.TrAct0.T, 
            self.model.Tpot.T, 
            np.int32(self.model.AerDays).T, 
            np.int32(self.model.AerDaysComp).T, 
            np.int32(self.model.AgeDays).T,
            np.int32(self.model.AgeDays_NS).T,
            np.int32(self.model.DaySubmerged).T,
            self.model.IrrNet.T, 
            np.int32(self.model.MaxCanopyCD).T, 
            self.model.Kcb.T, 
            self.model.a_Tr.T,
            self.model.fage.T, 
            np.int32(self.model.LagAer).T, 
            self.model.CurrentConc.T, 
            refconc,
            self.model.ETpot.T,
            self.model.GwIn.T,
            self.model.HI.T, 
            self.model.PctLagPhase.T,
            self.model.YieldForm.T,
            self.model.CCmin.T, 
            self.model.HIini.T, 
            self.model.HI0.T, 
            self.model.HIGC.T, 
            self.model.HIstart.T, 
            self.model.HIstartCD.T, 
            self.model.tLinSwitch.T, 
            self.model.dHILinear.T, 
            self.model.CropType.T,
            self.model.BioTempStress.T,
            self.model.GDD_up.T,
            self.model.GDD_lo.T,
            self.model.PolHeatStress.T,
            self.model.Tmax_up.T,
            self.model.Tmax_lo.T,
            self.model.fshape_b.T,
            self.model.PolColdStress.T,
            self.model.Tmin_up.T,
            self.model.Tmin_lo.T,
            self.model.B.T,
            self.model.B_NS.T,
            self.model.YldFormCD.T,
            self.model.WP.T,
            self.model.WPy.T,
            self.model.fCO2.T,
            self.model.Determinant.T,
            self.model.HIadj.T,
            self.model.PreAdj.T,
            self.model.Fpre.T, 
            self.model.Fpol.T, 
            self.model.Fpost.T, 
            self.model.fpost_dwn.T, 
            self.model.fpost_upp.T, 
            self.model.sCor1.T, 
            self.model.sCor2.T,
            self.model.dHI0.T, 
            self.model.dHI_pre.T, 
            self.model.CanopyDevEndCD.T, 
            self.model.HIendCD.T, 
            self.model.FloweringCD.T, 
            self.model.a_HI.T, 
            self.model.b_HI.T, 
            self.model.exc.T,
            self.model.Y.T,
            mature.T,
            int(self.model.CalendarType), self.model.GrowingSeasonDayOne.T, self.model.GrowingSeasonIndex.T,
            self.model.nFarm, self.model.nCrop, self.model.nComp, self.model.nLayer, self.model.domain.nxy            
        )                
        self.model.CropMature = mature.astype(bool).copy()

